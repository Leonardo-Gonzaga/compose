services:
  ############################################################
  # CORE DATA STORES
  ############################################################
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER:     ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB:       ${DB_DATABASE}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    command: >
      redis-server --save 60 1 --loglevel warning
                   --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$REDIS_PASSWORD", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  weaviate:
    image: semitechnologies/weaviate:1.24.10
    restart: unless-stopped
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      DEFAULT_VECTORIZER_MODULE: none
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      AUTHENTICATION_APIKEY_ENABLED: "true"
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: ${WEAVIATE_API_KEY}
      AUTHORIZATION_ADMINLIST_ENABLED: "true"
      AUTHORIZATION_ADMINLIST_USERS: ${WEAVIATE_AUTHORIZATION_ADMINLIST_USERS}
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/v1/.well-known/ready"]
      interval: 15s
      timeout: 5s
      retries: 5

  ############################################################
  # SECURITY & SANDBOX
  ############################################################
  ssrf_proxy:
    image: ubuntu/squid:latest
    restart: unless-stopped
    environment:
      HTTP_PORT:  ${SSRF_HTTP_PORT}
      HTTPS_PORT: ${SSRF_HTTPS_PORT}
    ports:
      - "${SSRF_HTTP_PORT}:${SSRF_HTTP_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SSRF_HTTP_PORT}"]
      interval: 30s
      timeout: 5s
      retries: 5

  sandbox:
    image: langgenius/dify-sandbox:latest
    restart: unless-stopped
    env_file: .env
    depends_on:
      - ssrf_proxy
    ports:
      - "8194:8194"

  ############################################################
  # APPLICATION
  ############################################################
  api:
    image: langgenius/dify-api:1.2.0
    restart: unless-stopped
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      weaviate:
        condition: service_started
    ports:
      - "5001:5001"

  worker:
    image: langgenius/dify-api:1.2.0
    restart: unless-stopped
    env_file: .env
    depends_on:
      - api
      - redis

  web:
    image: langgenius/dify-web:1.2.0
    restart: unless-stopped
    env_file: .env
    depends_on:
      - api
    ports:
      - "3000:3000"

  ############################################################
  # REVERSEâ€‘PROXY
  ############################################################
  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - api
    ports:
      - "${EXPOSE_NGINX_PORT}:80"
      - "${EXPOSE_NGINX_SSL_PORT}:443"

volumes:
  db_data:
  redis_data:
  weaviate_data:
